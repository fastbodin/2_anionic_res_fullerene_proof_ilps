Welcome to the CBC MILP Solver 
Version: 2.10.10 
Build Date: Aug  1 2023 

command line - cbc /var/folders/xx/fsz3wvqx27n46ckqdt6dl4gm0000gn/T/0939dc29af3946e2ac482df94add201e-pulp.mps -max -timeMode elapsed -branch -printingOptions all -solution /var/folders/xx/fsz3wvqx27n46ckqdt6dl4gm0000gn/T/0939dc29af3946e2ac482df94add201e-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 119 COLUMNS
At line 1108 RHS
At line 1223 BOUNDS
At line 1314 ENDATA
Problem MODEL has 114 rows, 90 columns and 807 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 35.3333 - 0.00 seconds
Cgl0002I 14 variables fixed
Cgl0004I processed model has 111 rows, 75 columns (75 integer (71 of which binary)) and 707 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 5 integer variables out of 75 objects (75 integer) have costs - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 5 integers unsatisfied sum - 2.33333
Cbc0038I Pass   1: suminf.    2.83333 (6) obj. 34.8333 iterations 22
Cbc0038I Pass   2: suminf.    2.08333 (7) obj. 34.9167 iterations 19
Cbc0038I Pass   3: suminf.    1.83333 (4) obj. 34.6667 iterations 16
Cbc0038I Pass   4: suminf.    0.33333 (1) obj. 34.3333 iterations 11
Cbc0038I Solution found of 34.3333
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Mini branch and bound could not fix general integers
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 75 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I After 0.00 seconds - Feasibility pump exiting - took 0.00 seconds
Cbc0031I 8 added rows had average density of 67
Cbc0013I At root node, 8 cuts changed objective from 35.333333 to 34.367875 in 74 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 257 row cuts average 60.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 39 row cuts average 54.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 80 row cuts average 53.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1e+50 best solution, best possible 34.367875 (0.08 seconds)
Cbc0001I Search completed - best objective -1e+50, took 69987 iterations and 4082 nodes (1.38 seconds)
Cbc0032I Strong branching done 5942 times (76511 iterations), fathomed 191 nodes and fixed 409 variables
Cbc0041I Maximum depth 23, 0 variables fixed on reduced cost (complete fathoming 83 times, 3366 nodes taking 47129 iterations)
Cuts at root node changed objective from 35.3333 to 34.3679
Probing was tried 74 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.014 seconds)
Gomory was tried 201 times and created 349 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Knapsack was tried 74 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Clique was tried 74 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 201 times and created 47 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 74 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 201 times and created 125 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Problem proven infeasible

No feasible solution found
Enumerated nodes:               4082
Total iterations:               69987
Time (CPU seconds):             1.17
Time (Wallclock seconds):       1.38

Option for printingOptions changed from normal to all
Total time (CPU seconds):       1.17   (Wallclock seconds):       1.38

