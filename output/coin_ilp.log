Welcome to the CBC MILP Solver 
Version: 2.10.10 
Build Date: Aug  1 2023 

command line - cbc /var/folders/xx/fsz3wvqx27n46ckqdt6dl4gm0000gn/T/e74f1f3cab694e30904acb4c41e7f8b9-pulp.mps -timeMode elapsed -branch -printingOptions all -solution /var/folders/xx/fsz3wvqx27n46ckqdt6dl4gm0000gn/T/e74f1f3cab694e30904acb4c41e7f8b9-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 118 COLUMNS
At line 988 RHS
At line 1102 BOUNDS
At line 1179 ENDATA
Problem MODEL has 113 rows, 76 columns and 716 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 25 - 0.00 seconds
Cgl0004I processed model has 111 rows, 74 columns (74 integer (71 of which binary)) and 706 elements
Cutoff increment increased from 1e-05 to 0.9999
Cbc0045I 4 integer variables out of 74 objects (74 integer) have costs - high priority
Cbc0045I branch on satisfied Y create fake objective Y random cost Y
Cbc0038I Initial state - 21 integers unsatisfied sum - 6.61538
Cbc0038I Pass   1: suminf.    4.42857 (19) obj. 26.5 iterations 36
Cbc0038I Pass   2: suminf.    4.42857 (19) obj. 26.5 iterations 14
Cbc0038I Pass   3: suminf.    4.31250 (23) obj. 29.8438 iterations 40
Cbc0038I Pass   4: suminf.    4.46154 (21) obj. 29.5385 iterations 16
Cbc0038I Pass   5: suminf.    3.00000 (6) obj. 30 iterations 40
Cbc0038I Pass   6: suminf.    2.00000 (4) obj. 30 iterations 35
Cbc0038I Pass   7: suminf.    2.00000 (4) obj. 30 iterations 39
Cbc0038I Pass   8: suminf.    2.00000 (4) obj. 30 iterations 14
Cbc0038I Pass   9: suminf.    2.00000 (4) obj. 30 iterations 5
Cbc0038I Pass  10: suminf.    2.00000 (4) obj. 30 iterations 17
Cbc0038I Pass  11: suminf.    2.50000 (5) obj. 30.5 iterations 19
Cbc0038I Pass  12: suminf.    2.50000 (5) obj. 30.5 iterations 26
Cbc0038I Pass  13: suminf.    2.00000 (4) obj. 29 iterations 40
Cbc0038I Pass  14: suminf.    2.00000 (4) obj. 29 iterations 30
Cbc0038I Pass  15: suminf.    2.00000 (4) obj. 29 iterations 30
Cbc0038I Pass  16: suminf.    8.00000 (16) obj. 26.5 iterations 35
Cbc0038I Pass  17: suminf.    7.22222 (25) obj. 30.1111 iterations 46
Cbc0038I Pass  18: suminf.    3.83333 (14) obj. 31.6667 iterations 33
Cbc0038I Pass  19: suminf.    2.50000 (5) obj. 31.5 iterations 23
Cbc0038I Pass  20: suminf.    2.50000 (5) obj. 31.5 iterations 15
Cbc0038I Pass  21: suminf.    2.75000 (22) obj. 31.6667 iterations 42
Cbc0038I Pass  22: suminf.    2.75000 (10) obj. 31.75 iterations 27
Cbc0038I Pass  23: suminf.    2.60000 (12) obj. 31 iterations 37
Cbc0038I Pass  24: suminf.    2.00000 (10) obj. 31 iterations 31
Cbc0038I Pass  25: suminf.    2.00000 (10) obj. 31 iterations 32
Cbc0038I Pass  26: suminf.    3.14286 (23) obj. 30.6429 iterations 34
Cbc0038I Pass  27: suminf.    2.00000 (10) obj. 31 iterations 22
Cbc0038I Pass  28: suminf.    3.20000 (15) obj. 31.2 iterations 29
Cbc0038I Pass  29: suminf.    2.00000 (10) obj. 32 iterations 24
Cbc0038I Pass  30: suminf.    2.00000 (10) obj. 32 iterations 40
Cbc0038I Pass  31: suminf.    3.40000 (14) obj. 32.8 iterations 40
Cbc0038I Pass  32: suminf.    2.00000 (8) obj. 33 iterations 37
Cbc0038I Pass  33: suminf.    2.40000 (20) obj. 32.8 iterations 38
Cbc0038I Pass  34: suminf.    4.83333 (20) obj. 30.3889 iterations 43
Cbc0038I Pass  35: suminf.    2.50000 (5) obj. 30.5 iterations 37
Cbc0038I Pass  36: suminf.    2.50000 (5) obj. 30.5 iterations 33
Cbc0038I Pass  37: suminf.    2.50000 (5) obj. 30.5 iterations 13
Cbc0038I Pass  38: suminf.    5.50000 (11) obj. 29.5 iterations 31
Cbc0038I Pass  39: suminf.    2.50000 (5) obj. 30.5 iterations 30
Cbc0038I Pass  40: suminf.    7.00000 (14) obj. 30 iterations 57
Cbc0038I Pass  41: suminf.    7.22222 (25) obj. 30.1111 iterations 51
Cbc0038I Pass  42: suminf.    3.83333 (14) obj. 31.6667 iterations 48
Cbc0038I Pass  43: suminf.    2.50000 (5) obj. 31.5 iterations 37
Cbc0038I Pass  44: suminf.    2.50000 (5) obj. 31.5 iterations 18
Cbc0038I Pass  45: suminf.    3.75000 (13) obj. 30.5 iterations 62
Cbc0038I Pass  46: suminf.    2.50000 (5) obj. 29.5 iterations 43
Cbc0038I Pass  47: suminf.    2.50000 (5) obj. 29.5 iterations 19
Cbc0038I Pass  48: suminf.    2.50000 (5) obj. 29.5 iterations 16
Cbc0038I Pass  49: suminf.    2.50000 (5) obj. 29.5 iterations 20
Cbc0038I Pass  50: suminf.    2.50000 (5) obj. 29.5 iterations 32
Cbc0038I Pass  51: suminf.    4.00000 (14) obj. 28.5 iterations 31
Cbc0038I Pass  52: suminf.    3.52941 (21) obj. 28.8235 iterations 23
Cbc0038I Pass  53: suminf.    3.81250 (18) obj. 28.4375 iterations 50
Cbc0038I Pass  54: suminf.    2.00000 (4) obj. 30 iterations 45
Cbc0038I Pass  55: suminf.    2.00000 (4) obj. 30 iterations 11
Cbc0038I Pass  56: suminf.    2.00000 (4) obj. 30 iterations 7
Cbc0038I Pass  57: suminf.    5.16667 (15) obj. 30.3333 iterations 32
Cbc0038I Pass  58: suminf.    2.00000 (4) obj. 32 iterations 25
Cbc0038I Pass  59: suminf.    2.00000 (4) obj. 32 iterations 10
Cbc0038I Pass  60: suminf.    3.68000 (24) obj. 30.4 iterations 30
Cbc0038I Pass  61: suminf.    2.00000 (4) obj. 31 iterations 20
Cbc0038I Pass  62: suminf.    2.50000 (5) obj. 30.5 iterations 38
Cbc0038I Pass  63: suminf.    2.50000 (5) obj. 30.5 iterations 29
Cbc0038I Pass  64: suminf.    2.50000 (5) obj. 30.5 iterations 13
Cbc0038I Pass  65: suminf.    6.25000 (15) obj. 30.25 iterations 35
Cbc0038I Pass  66: suminf.    4.75000 (18) obj. 31.3611 iterations 45
Cbc0038I Pass  67: suminf.    2.50000 (5) obj. 32.5 iterations 45
Cbc0038I Pass  68: suminf.    2.50000 (5) obj. 32.5 iterations 21
Cbc0038I Pass  69: suminf.    6.33333 (19) obj. 30 iterations 62
Cbc0038I Pass  70: suminf.    4.00000 (8) obj. 31 iterations 59
Cbc0038I Pass  71: suminf.    2.25000 (9) obj. 31.5 iterations 15
Cbc0038I Pass  72: suminf.    2.00000 (4) obj. 32 iterations 16
Cbc0038I Pass  73: suminf.    2.00000 (4) obj. 32 iterations 13
Cbc0038I Pass  74: suminf.    2.00000 (4) obj. 32 iterations 10
Cbc0038I Pass  75: suminf.    4.50000 (14) obj. 29.75 iterations 33
Cbc0038I Pass  76: suminf.    2.00000 (4) obj. 31 iterations 28
Cbc0038I Pass  77: suminf.    2.00000 (4) obj. 31 iterations 2
Cbc0038I Pass  78: suminf.    2.00000 (4) obj. 31 iterations 8
Cbc0038I Pass  79: suminf.    2.00000 (4) obj. 31 iterations 24
Cbc0038I Pass  80: suminf.    4.68750 (24) obj. 29.9375 iterations 60
Cbc0038I Pass  81: suminf.    2.00000 (4) obj. 30 iterations 34
Cbc0038I Pass  82: suminf.    2.00000 (4) obj. 30 iterations 5
Cbc0038I Pass  83: suminf.    2.00000 (4) obj. 30 iterations 31
Cbc0038I Pass  84: suminf.    2.00000 (4) obj. 30 iterations 44
Cbc0038I Pass  85: suminf.    4.66667 (14) obj. 29 iterations 52
Cbc0038I Pass  86: suminf.    2.75000 (11) obj. 28.75 iterations 39
Cbc0038I Pass  87: suminf.    2.50000 (5) obj. 32.5 iterations 66
Cbc0038I Pass  88: suminf.    2.50000 (5) obj. 32.5 iterations 22
Cbc0038I Pass  89: suminf.    2.50000 (5) obj. 32.5 iterations 6
Cbc0038I Pass  90: suminf.    2.00000 (4) obj. 34 iterations 13
Cbc0038I Pass  91: suminf.    2.50000 (5) obj. 33.5 iterations 16
Cbc0038I Pass  92: suminf.    2.50000 (5) obj. 33.5 iterations 8
Cbc0038I Pass  93: suminf.    3.20000 (15) obj. 32.2 iterations 32
Cbc0038I Pass  94: suminf.    2.42105 (18) obj. 32.6316 iterations 29
Cbc0038I Pass  95: suminf.    6.00000 (12) obj. 30 iterations 30
Cbc0038I Pass  96: suminf.    5.00000 (10) obj. 28 iterations 43
Cbc0038I Pass  97: suminf.    5.00000 (10) obj. 28 iterations 0
Cbc0038I Pass  98: suminf.    5.00000 (10) obj. 28 iterations 26
Cbc0038I Pass  99: suminf.    3.40909 (21) obj. 28.5 iterations 74
Cbc0038I Pass 100: suminf.    8.00000 (16) obj. 28.5 iterations 38
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 74 columns, reduced to 111 rows 74 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting - took 0.13 seconds
Cbc0031I 3 added rows had average density of 73
Cbc0013I At root node, 3 cuts changed objective from 25 to 25.999988 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1581 row cuts average 72.8 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (TwoMirCuts) - 108 row cuts average 62.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible 25.999988 (0.31 seconds)
Cbc0010I After 1000 nodes, 3 on tree, 1e+50 best solution, best possible 27 (3.63 seconds)
Cbc0001I Search completed - best objective 1e+50, took 149854 iterations and 10847 nodes (4.27 seconds)
Cbc0032I Strong branching done 7986 times (115198 iterations), fathomed 176 nodes and fixed 430 variables
Cbc0041I Maximum depth 20, 0 variables fixed on reduced cost (complete fathoming 196 times, 9689 nodes taking 114964 iterations)
Cuts at root node changed objective from 25 to 26
Probing was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.024 seconds)
Gomory was tried 289 times and created 1702 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
Knapsack was tried 100 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Clique was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
MixedIntegerRounding2 was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
TwoMirCuts was tried 100 times and created 108 cuts of which 0 were active after adding rounds of cuts (0.011 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Problem proven infeasible

No feasible solution found
Enumerated nodes:               10847
Total iterations:               149854
Time (CPU seconds):             3.56
Time (Wallclock seconds):       4.27

Option for printingOptions changed from normal to all
Total time (CPU seconds):       3.56   (Wallclock seconds):       4.27

